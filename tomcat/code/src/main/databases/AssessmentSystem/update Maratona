update Exercise set modelResponse =
'	public String pessoaMaisAlta(String parametro) {
		// Read input
		String[] linhas = parametro.split("\\n");
		int n = Integer.parseInt(linhas[0]);
		Student[] students = new Student[n];
		for (int i = 0; i < n; i++) {
			int position = i+1;
			String[] dados = linhas[position].split(" "); 
			String name = dados[0];
			String height = dados[1];
			String unit = dados[2];
			students[i] = new Student(name, height, unit);
		}
		
		// Sort by height and write names to output
		Arrays.sort(students);
		String result = "";
		for (int i = 0; i < 5 && i < students.length; i++)
			result += students[i].name + "\\n";
		return result;
	}
	
	private static final class Student implements Comparable<Student> {
		
		public final String name;
		public final BigDecimal height;  // In millimetres
		
		
		public Student(String name, String height, String unit) {
			this.name = name;
			int scale;
			switch (unit) {
				case  "m":  scale = 3;  break;
				case "dm":  scale = 2;  break;
				case "cm":  scale = 1;  break;
				case "mm":  scale = 0;  break;
				default:  throw new AssertionError("Invalid unit");
			}
			this.height = new BigDecimal(height).movePointRight(scale);
		}
		
		
		public int compareTo(Student other) {
			if (other.height.compareTo(height) != 0)
				return other.height.compareTo(height);  // Descending
			else
				return name.compareTo(other.name);  // Ascending
		}
		
	}	
',

tests=
'
package PessoaMaisAlta;

import org.junit.After;

import org.junit.AfterClass;

import org.junit.Before;

import org.junit.BeforeClass;

import org.junit.Test;

import static org.junit.Assert.*;

import PessoaMaisAlta.PessoaMaisAlta;

public class PessoaMaisAltaTest {

    @Test

    public void testPessoaMaisAlta1() {

		String parametro = "12\\n"
				+"Jim 1.45 m\\n"
				+"Sally 187 cm\\n"
				+"Joey 1064 mm\\n"
				+"Roel 15.23 dm\\n"
				+"Karl 134 cm\\n"
				+"Melanie 18.9 dm\\n"
				+"Jill 1.54 m\\n"
				+"Sam 133 cm\\n"
				+"Joel 1877 mm\\n"
				+"Roger 17.83 dm\\n"
				+"Karen 178 cm\\n"
				+"Marnie 17.9 dm";

	PessoaMaisAlta pessoaMaisAlta = new PessoaMaisAlta();

	String resultado = "Melanie\\n"
+"Joel\\n"
+"Sally\\n"
+"Marnie\\n"
+"Roger\\n"; 

	String resultadoFuncao = pessoaMaisAlta.pessoaMaisAlta(parametro);

//System.out.println("Resultado:"+resultado);
//System.out.println("ResultadoFuncao:"+resultadoFuncao);

	System.out.println("pessoaMaisAlta1");
	if(resultadoFuncao.equals(resultado) ){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

    @Test

    public void testPessoaMaisAlta2() {

		String parametro = "9\\n"
				+"Sara 1.70 m\\n"
				+"Marcelo 169 cm\\n"
				+"Barack 1568 mm\\n"
				+"Bill 19.23 dm\\n"
				+"Morgan 134 cm\\n"
				+"James 18.9 dm\\n"
				+"Cath 1.54 m\\n"
				+"Amanda 133 cm\\n"
				+"Bianca 1877 mm";

	PessoaMaisAlta pessoaMaisAlta = new PessoaMaisAlta();

	String resultado = "Bill\\n"
+"James\\n"
+"Bianca\\n"
+"Sara\\n"
+"Marcelo\\n";

	String resultadoFuncao = pessoaMaisAlta.pessoaMaisAlta(parametro);

//System.out.println("Resultado:"+resultado);
//System.out.println("ResultadoFuncao:"+resultadoFuncao);

	System.out.println("pessoaMaisAlta2");
	if(resultadoFuncao.equals(resultado) ){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

}
' 
where id = 23;


