insert into Exercise ( name, statement, modelResponse, tests, course, module) values ("AreaCirculo","<p>Dadas as coordenadas do plano cartesiano para o centro de um círculo (x1, y1) e um ponto no círculo
circunferência (x2, y2), calcule a área do círculo.</p>
<p>
Lembre-se que a fórmula para a área do círculo é <img src='/resources/images/exercises/3/1/1.png'>.</p>
<p>
Lembre-se também a fórmula para a distância entre dois pontos é <img src='/resources/images/exercises/3/1/2.png'></p>
<p>Para este programa em particular, assuma <img src='/resources/images/exercises/3/1/3.png'> = 3,14159.
</p>
<p>
-10000 <= x1, y1, x2, y2 <= 10000
</p>
<p>
A saída deverá ser arredondada para três casas decimais.</p> 
<p>
exemplo de entrada</p>
<table border='1'>
<tr><td>areaCirculo(2,4,4,8)</td><td>62.832</td></tr>
<tr><td>areaCirculo(1,1,1,2)</td><td>3.142</td></tr>
<tr><td>areaCirculo(10.25,10.5,100,75.8)</td><td>38701.726</td></tr>
</table>", 
"double areaCirculo(double x1, double y1, double x2, double y2){
double valor = 3.14159 * ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
BigDecimal bd = new BigDecimal(valor).setScale(3, RoundingMode.HALF_EVEN);
double resultado = bd.doubleValue(); 
return resultado;
}",
'
package AreaCirculo;

import org.junit.After;

import org.junit.AfterClass;

import org.junit.Before;

import org.junit.BeforeClass;

import org.junit.Test;

import static org.junit.Assert.*;

import AreaCirculo.AreaCirculo;

public class AreaCirculoTest {

    @Test

    public void testAreaCirculo1() {

	AreaCirculo areaCirculo = new AreaCirculo();

	System.out.println("areaCirculo1");
	if(areaCirculo.areaCirculo(2,4,4,8) == 62.832){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

    @Test

    public void testAreaCirculo2() {

	AreaCirculo areaCirculo = new AreaCirculo();

	System.out.println("areaCirculo2");
	if(areaCirculo.areaCirculo(1,1,1,2) == 3.142){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}
        assertTrue(true);
    }

    @Test

    public void testAreaCirculo3() {

	AreaCirculo areaCirculo = new AreaCirculo();

	System.out.println("areaCirculo3");
	if(areaCirculo.areaCirculo(10.25,10.5,100,75.8) == 38701.726){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

}
'
, 3,1);


insert into Exercise ( name, statement, modelResponse, tests, course, module) values ("PessoaMaisAlta","<p><h2>Pessoas Mais altas</h2></p>
<p>Cada aluno na aula da Sra. Chapman mediu-se usando um medidor e anotou
sua altura. O problema era que cada aluno usava uma unidade de medida diferente,
metros (m), decímetros (dm), centímetros (cm) ou milímetros (mm). Seu trabalho é descobrir o
nomes das cinco pessoas mais altas da turma.</p>
<p>A primeira linha possui o número dos alunos a serem cadastrados. As outras n linhas conterão os nomes, alturas e
unidade de medida dos alunos. Cada item é separado por um único espaço. As alturas serão
um valor real e a unidade de medida será m, dm, cm ou mm.</p>
<p>A saida conterá cinco linhas de dados. Ele irá listar os nomes dos cinco mais altos
alunos em ordem. Se os alunos tiverem alturas idênticas, seus nomes devem ser listados em ordem alfabética
ordem.
</p>
<b><p>Entrada de amostra</p></b>
<p>
12<br>
Jim 1.45 m<br>
Sally 187 cm<br>
Joey 1064 mm<br>
Roel 15.23 dm<br>
Karl 134 cm<br>
Melanie 18.9 dm<br>
Jill 1.54 m<br>
Sam 133 cm<br>
Joel 1877 mm<br>
Roger 17.83 dm<br>
Karen 178 cm<br>
Marnie 17.9 dm<br>
</p>
<b><p>Saída de Amostra</p></b>
<p>
Melanie<br>
Joel<br>
Sally<br>
Marnie<br>
Roger
</p>
", 
'	public String pessoaMaisAlta(String parametro) {
		// Read input
		String[] linhas = parametro.split("\n");
		int n = Integer.parseInt(linhas[0]);
		Student[] students = new Student[n];
		for (int i = 0; i < n; i++) {
			int position = i+1;
			String[] dados = linhas[position].split(" "); 
			String name = dados[0];
			String height = dados[1];
			String unit = dados[2];
			students[i] = new Student(name, height, unit);
		}
		
		// Sort by height and write names to output
		Arrays.sort(students);
		String result = "";
		for (int i = 0; i < 5 && i < students.length; i++)
			result += students[i].name + "\n";
		return result;
	}
	
	private static final class Student implements Comparable<Student> {
		
		public final String name;
		public final BigDecimal height;  // In millimetres
		
		
		public Student(String name, String height, String unit) {
			this.name = name;
			int scale;
			switch (unit) {
				case  "m":  scale = 3;  break;
				case "dm":  scale = 2;  break;
				case "cm":  scale = 1;  break;
				case "mm":  scale = 0;  break;
				default:  throw new AssertionError("Invalid unit");
			}
			this.height = new BigDecimal(height).movePointRight(scale);
		}
		
		
		public int compareTo(Student other) {
			if (other.height.compareTo(height) != 0)
				return other.height.compareTo(height);  // Descending
			else
				return name.compareTo(other.name);  // Ascending
		}
		
	}	
',
'
package PessoaMaisAlta;

import org.junit.After;

import org.junit.AfterClass;

import org.junit.Before;

import org.junit.BeforeClass;

import org.junit.Test;

import static org.junit.Assert.*;

import PessoaMaisAlta.PessoaMaisAlta;

public class PessoaMaisAltaTest {

    @Test

    public void testPessoaMaisAlta1() {

		String parametro = "12\n"
				+"Jim 1.45 m\n"
				+"Sally 187 cm\n"
				+"Joey 1064 mm\n"
				+"Roel 15.23 dm\n"
				+"Karl 134 cm\n"
				+"Melanie 18.9 dm\n"
				+"Jill 1.54 m\n"
				+"Sam 133 cm\n"
				+"Joel 1877 mm\n"
				+"Roger 17.83 dm\n"
				+"Karen 178 cm\n"
				+"Marnie 17.9 dm";

	PessoaMaisAlta pessoaMaisAlta = new PessoaMaisAlta();

	String resultado = "Melanie"
+"Joel\n"
+"Sally\n"
+"Marnie\n"
+"Roger"; 

	System.out.println("pessoaMaisAlta1");
	if(pessoaMaisAlta.pessoaMaisAlta(parametro) == resultado ){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

    @Test

    public void testPessoaMaisAlta2() {

		String parametro = "9\n"
				+"Sara 1.70 m\n"
				+"Marcelo 169 cm\n"
				+"Barack 1568 mm\n"
				+"Bill 19.23 dm\n"
				+"Morgan 134 cm\n"
				+"James 18.9 dm\n"
				+"Cath 1.54 m\n"
				+"Amanda 133 cm\n"
				+"Bianca 1877 mm";

	PessoaMaisAlta pessoaMaisAlta = new PessoaMaisAlta();

	String resultado = "Bill\n
+"James\n"
+"Bianca\n"
+"Sara\n"
+"Marcelo";

	System.out.println("pessoaMaisAlta1");
	if(pessoaMaisAlta.pessoaMaisAlta(parametro) == resultado ){
		System.out.println(":true");
	} else {
		System.out.println(":false");	
	}

        assertTrue(true);
    }

}
'
, 3,2);


